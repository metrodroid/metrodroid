allprojects {
    repositories {
        google()
        jcenter()
    }
}

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'
apply plugin: 'checkstyle'

/*
check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    source 'src'
    include '** /*.java'
    exclude '** /gen/**'
    classpath = files()
}
*/

dependencies {
    implementation ('com.android.support:appcompat-v7:27.1.1') {
        exclude module: 'animated-vector-drawable'
        exclude module: 'support-fragment'
    }
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:support-core-ui:27.1.1'
    implementation ('com.android.support:support-core-utils:27.1.1') {
        exclude module: 'support-compat'
    }
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    implementation 'commons-io:commons-io:2.5'
    implementation 'org.apache.commons:commons-lang3:3.5'
    implementation 'com.google.protobuf:protobuf-lite:3.0.0'
    implementation 'com.neovisionaries:nv-i18n:1.23'
    implementation('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    implementation project(':nfc-felica-lib')
    androidTestImplementation 'org.hamcrest:hamcrest-core:1.3'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
}

protobuf {
    protoc {
        // You still need protoc like in the non-Android case
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                javalite { }
            }
        }
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode "git -C ${projectDir} rev-list --count HEAD".execute().text.trim().toInteger()
        versionName "git -C ${projectDir} describe --always --tags --dirty".execute().text.trim().replaceAll("^v", "")

        resConfigs ([
                // Update this whenever new language translations become available in Weblate.
                // Languages we support
                'en', 'en-rAU', 'en-rCA', 'en-rNZ',
                'fi',
                'fr',
                // Hebrew
                'he', 'iw',
                // Indonesian
                'id', 'in',
                'ja',
                'kab',
                'nb-rNO',
                'nl',
                'ru',
                'tr',

                // UI mode


        ])
        vectorDrawables {
            useSupportLibrary = true
            generatedDensities 'ldpi', 'mdpi', 'hdpi'
        }
    }

    buildTypes {
        dev.initWith(buildTypes.debug)
        dev {
            applicationIdSuffix '.dev'
            minifyEnabled true
            shrinkResources true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard.cfg'
            matchingFallbacks = ['debug']
        }
        release {
            minifyEnabled true
            shrinkResources true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard.cfg'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
}
